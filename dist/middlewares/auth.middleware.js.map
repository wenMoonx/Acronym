{"version":3,"sources":["../../src/middlewares/auth.middleware.ts"],"sourcesContent":["import { NextFunction, Response } from 'express';\r\nimport { SECRET_KEY } from '@config';\r\nimport { HttpException } from '@exceptions/HttpException';\r\nimport { RequestWithUser } from '@interfaces/auth.interface';\r\n\r\nconst authMiddleware = async (req: RequestWithUser, res: Response, next: NextFunction) => {\r\n  try {\r\n    const Authorization = req.cookies['Authorization'] || (req.header('Authorization') ? req.header('Authorization').split('Bearer ')[1] : null);\r\n    if (Authorization) {\r\n      const secretKey: string = SECRET_KEY;\r\n\r\n      if (secretKey === Authorization) {\r\n        next();\r\n      } else {\r\n        next(new HttpException(401, 'Wrong authentication token'));\r\n      }\r\n    } else {\r\n      next(new HttpException(404, 'Authentication token missing'));\r\n    }\r\n  } catch (error) {\r\n    next(new HttpException(401, 'Wrong authentication token'));\r\n  }\r\n};\r\n\r\nexport default authMiddleware;\r\n"],"names":["authMiddleware","req","res","next","Authorization","cookies","header","split","secretKey","SECRET_KEY","HttpException","error"],"mappings":"AAAA;;;;+BAwBA,SAA8B;;aAA9B,QAA8B;;wBAvBH,WAAS;+BACN,6BAA2B;AAGzD,MAAMA,cAAc,GAAG,OAAOC,GAAoB,EAAEC,GAAa,EAAEC,IAAkB,GAAK;IACxF,IAAI;QACF,MAAMC,aAAa,GAAGH,GAAG,CAACI,OAAO,CAAC,eAAe,CAAC,IAAKJ,CAAAA,GAAG,CAACK,MAAM,CAAC,eAAe,CAAC,GAAGL,GAAG,CAACK,MAAM,CAAC,eAAe,CAAC,CAACC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAA,AAAC,AAAC;QAC7I,IAAIH,aAAa,EAAE;YACjB,MAAMI,SAAS,GAAWC,OAAU,WAAA,AAAC;YAErC,IAAID,SAAS,KAAKJ,aAAa,EAAE;gBAC/BD,IAAI,EAAE,CAAC;YACT,OAAO;gBACLA,IAAI,CAAC,IAAIO,cAAa,cAAA,CAAC,GAAG,EAAE,4BAA4B,CAAC,CAAC,CAAC;YAC7D,CAAC;QACH,OAAO;YACLP,IAAI,CAAC,IAAIO,cAAa,cAAA,CAAC,GAAG,EAAE,8BAA8B,CAAC,CAAC,CAAC;QAC/D,CAAC;IACH,EAAE,OAAOC,KAAK,EAAE;QACdR,IAAI,CAAC,IAAIO,cAAa,cAAA,CAAC,GAAG,EAAE,4BAA4B,CAAC,CAAC,CAAC;IAC7D,CAAC;AACH,CAAC,AAAC;MAEF,QAA8B,GAAfV,cAAc"}
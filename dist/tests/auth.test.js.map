{"version":3,"sources":["../../src/tests/auth.test.ts"],"sourcesContent":["// import request from 'supertest';\r\n// import App from '@/app';\r\n// import { CreateUserDto } from '@dtos/users.dto';\r\n// import AuthRoute from '@routes/auth.route';\r\n\r\n// afterAll(async () => {\r\n//   await new Promise<void>(resolve => setTimeout(() => resolve(), 500));\r\n// });\r\n\r\n// describe('Testing Auth', () => {\r\n//   describe('[POST] /signup', () => {\r\n//     it('response should have the Create userData', () => {\r\n//       const userData: CreateUserDto = {\r\n//         email: 'example@email.com',\r\n//         password: 'password',\r\n//       };\r\n//       const authRoute = new AuthRoute();\r\n//       const app = new App([authRoute]);\r\n\r\n//       return request(app.getServer()).post('/signup').send(userData);\r\n//     });\r\n//   });\r\n\r\n//   describe('[POST] /login', () => {\r\n//     it('response should have the Set-Cookie header with the Authorization token', async () => {\r\n//       const userData: CreateUserDto = {\r\n//         email: 'example1@email.com',\r\n//         password: 'password',\r\n//       };\r\n\r\n//       const authRoute = new AuthRoute();\r\n//       const app = new App([authRoute]);\r\n\r\n//       return request(app.getServer())\r\n//         .post('/login')\r\n//         .send(userData)\r\n//         .expect('Set-Cookie', /^Authorization=.+/);\r\n//     });\r\n//   });\r\n\r\n//   // error: StatusCode : 404, Message : Authentication token missing\r\n//   // describe('[POST] /logout', () => {\r\n//   //   it('logout Set-Cookie Authorization=; Max-age=0', () => {\r\n//   //     const authRoute = new AuthRoute();\r\n//   //     const app = new App([authRoute]);\r\n\r\n//   //     return request(app.getServer())\r\n//   //       .post('/logout')\r\n//   //       .expect('Set-Cookie', /^Authorization=\\;/);\r\n//   //   });\r\n//   // });\r\n// });\r\n"],"names":[],"mappings":"AAAA"}
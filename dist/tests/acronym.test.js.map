{"version":3,"sources":["../../src/tests/acronym.test.ts"],"sourcesContent":["import request from 'supertest';\nimport { PlatformTest } from '@tsed/common';\nimport App from '@/app';\nimport { CreateAcronymDto, updateAcronymDto, deleteAcronymDto } from '@dtos/acronym.dto';\nimport { Acronym, AcronymGroup } from '@interfaces/acronym.interface';\nimport AcronymModel from '@models/acronym.model';\nimport AcronymRoute from '@routes/acronym.route';\n\nafterAll(async () => {\n  await new Promise<void>(resolve => setTimeout(() => resolve(), 1000));\n  PlatformTest.create();\n  PlatformTest.reset();\n});\n\ndescribe('Testing Acronyms', () => {\n  describe('[GET] /acronym', () => {\n    test.only('response statusCode 200 / acronym', async () => {\n      const search = 'I was';\n      const from = 0;\n      const limit = 10;\n      const acronyms: Acronym[] = AcronymModel.readFile();\n      const findAcronyms: Acronym[] = acronyms.filter(acronym => {\n        const key = Object.keys(acronym)[0];\n        if (key.search(search) !== -1 || acronym[key].search(search) !== -1) {\n          return acronym;\n        }\n      });\n      const result = findAcronyms.slice(Number(from), Number(from) + Number(limit) + 1);\n      const acronymRoute = new AcronymRoute();\n      const app = new App([acronymRoute]);\n      return request(app.getServer())\n        .get(`${acronymRoute.path}?from=${from}&limit=${limit}&search=${search}`)\n        .expect(200, { data: result, type: 'success' });\n    });\n  });\n\n  describe('[POST] /acronym', () => {\n    test.only('response statusCode 200 / created', async () => {\n      const acronymData: CreateAcronymDto = {\n        acronym: 'W2be',\n        description: 'want to be',\n      };\n      const acronymRoute = new AcronymRoute();\n      const app = new App([acronymRoute]);\n      return request(app.getServer())\n        .post(`${acronymRoute.path}`)\n        .send(acronymData)\n        .expect(200, { message: 'A new acronym created.', type: 'success' });\n    });\n  });\n\n  describe('[PUT] /acronym/:nowAcronym', () => {\n    test.only('response statusCode 200 / updated', async () => {\n      const token = 'secretKey';\n      const nowAcronym = 'W2be';\n      const acronymData: updateAcronymDto = {\n        newAcronym: 'W2be',\n      };\n      const acronymRoute = new AcronymRoute();\n      const app = new App([acronymRoute]);\n      return request(app.getServer())\n        .put(`${acronymRoute.path}/${nowAcronym}`)\n        .set('Authorization', `Bearer ${token}`)\n        .send(acronymData)\n        .expect(200, { message: 'The acronym updated successfully.', type: 'success' });\n    });\n  });\n\n  describe('[DELETE] /acronym/:acronym', () => {\n    test.only('response statusCode 200 / deleted', async () => {\n      const deleteAcronym = 'W2be';\n      const token = 'secretKey';\n      const acronymRoute = new AcronymRoute();\n      const app = new App([acronymRoute]);\n      return request(app.getServer())\n        .delete(`${acronymRoute.path}/${deleteAcronym}`)\n        .set('Authorization', `Bearer ${token}`)\n        .expect(200, { message: 'The acronym deleted successfully.', type: 'success' });\n    });\n  });\n});\n"],"names":["afterAll","Promise","resolve","setTimeout","PlatformTest","create","reset","describe","test","only","search","from","limit","acronyms","AcronymModel","readFile","findAcronyms","filter","acronym","key","Object","keys","result","slice","Number","acronymRoute","AcronymRoute","app","App","request","getServer","get","path","expect","data","type","acronymData","description","post","send","message","token","nowAcronym","newAcronym","put","set","deleteAcronym","delete"],"mappings":"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"}
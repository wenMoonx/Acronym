{"version":3,"sources":["../src/app.ts"],"sourcesContent":["import cookieParser from 'cookie-parser';\nimport express from 'express';\nimport swaggerJSDoc from 'swagger-jsdoc';\nimport swaggerUi from 'swagger-ui-express';\nimport { NODE_ENV, PORT } from '@config';\nimport { Routes } from '@interfaces/routes.interface';\nimport errorMiddleware from '@middlewares/error.middleware';\nimport { logger } from '@utils/logger';\n// import { SwaggerConfig, generateDocumentation } from 'typescript-swagger';\nimport { dbConnection } from '@databases';\nimport mongoose from 'mongoose';\nimport { graphqlHTTP } from 'express-graphql';\nimport schemas from '@graphql/schemas';\nimport resolvers from '@graphql/resolvers';\n\n// const packageJson = require('../package.json');\n// const tsConfig = require('../tsconfig.json');\n\n// const swaggerConfig: SwaggerConfig = {\n//   yaml: true,\n//   name: 'API - Documentation',\n//   description: packageJson.description,\n//   basePath: '/',\n//   host: 'localhost:3000',\n//   version: packageJson.version,\n//   outputDirectory: 'public',\n//   entryFile: path.join('src', 'controllers', '**', '*.ts'),\n//   decoratorConfig: {\n//     useBuildIn: true,\n//     useLibrary: ['typescript-rest', '@decorators/express'],\n//   },\n//   ignore: ['**/node_modules/**'],\n//   consumes: ['application/json'],\n//   produces: ['application/json'],\n// };\nclass App {\n  public app: express.Application;\n  public env: string;\n  public port: string | number;\n\n  constructor(routes: Routes[]) {\n    this.app = express();\n    this.env = NODE_ENV || 'development';\n    this.port = PORT || 3000;\n\n    this.initializeMiddlewares();\n    this.connectToDatabase();\n    this.initializeRoutes(routes);\n    this.initializeSwagger();\n    this.initializeErrorHandling();\n    this.initializeGraphql();\n  }\n\n  public listen() {\n    this.app.listen(this.port, () => {\n      logger.info(`=================================`);\n      logger.info(`======= ENV: ${this.env} =======`);\n      logger.info(`ðŸš€ App listening on the port ${this.port}`);\n      logger.info(`=================================`);\n    });\n  }\n\n  public getServer() {\n    return this.app;\n  }\n\n  private connectToDatabase() {\n    mongoose\n      .connect(dbConnection.url)\n      .then(() => logger.info('MongoDB connected'))\n      .catch(err => logger.info('mongoDB is err, ', err));\n  }\n\n  private initializeMiddlewares() {\n    this.app.use(express.json());\n    this.app.use(express.urlencoded({ extended: true }));\n    this.app.use(cookieParser());\n  }\n\n  private initializeGraphql() {\n    this.app.use(\n      '/graphql',\n      graphqlHTTP((req, res) => ({\n        schema: schemas,\n        rootValue: resolvers,\n        graphiql: true,\n        context: {\n          req,\n          res,\n        },\n      })),\n    );\n  }\n\n  private initializeRoutes(routes: Routes[]) {\n    routes.forEach(route => {\n      this.app.use('/', route.router);\n    });\n  }\n\n  private initializeSwagger() {\n    // await generateDocumentation(swaggerConfig, tsConfig);\n    const options = {\n      swaggerDefinition: {\n        info: {\n          title: 'REST API',\n          version: '1.0.0',\n          description: 'Example docs',\n        },\n      },\n      apis: ['swagger.yaml'],\n    };\n\n    const specs = swaggerJSDoc(options);\n    this.app.use('/api-docs', swaggerUi.serve, swaggerUi.setup(specs));\n  }\n\n  private initializeErrorHandling() {\n    this.app.use(errorMiddleware);\n  }\n}\n\nexport default App;\n"],"names":["App","listen","app","port","logger","info","env","getServer","connectToDatabase","mongoose","connect","dbConnection","url","then","catch","err","initializeMiddlewares","use","express","json","urlencoded","extended","cookieParser","initializeGraphql","graphqlHTTP","req","res","schema","schemas","rootValue","resolvers","graphiql","context","initializeRoutes","routes","forEach","route","router","initializeSwagger","options","swaggerDefinition","title","version","description","apis","specs","swaggerJSDoc","swaggerUi","serve","setup","initializeErrorHandling","errorMiddleware","constructor","NODE_ENV","PORT"],"mappings":"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"}
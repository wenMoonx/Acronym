{"version":3,"sources":["../../src/controllers/acronym.controller.ts"],"sourcesContent":["import { NextFunction, Request, Response } from 'express';\nimport { Path, Accept, GET, POST, QueryParam } from 'typescript-rest';\nimport { SwaggerTags, ResponseProduces } from 'typescript-swagger';\n\nimport { CreateAcronymDto } from '@dtos/acronym.dto';\nimport AcronymService from '@services/acronym.service';\n@Path('/acronym')\nclass AcronymController {\n  public acronymService = new AcronymService();\n\n  @GET\n  @SwaggerTags('adiministrative', 'department1')\n  public readAcronym = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const { from = 0, limit = 10, search = '' } = req.query;\n      const { acronyms, isOnly } = await this.acronymService.readAcronym(from as number, limit as number, search as string);\n\n      res.setHeader('isOnly', isOnly.toString());\n      res.status(200).json({\n        data: acronyms,\n        type: 'success',\n      });\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public createAcronym = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const acronymData: CreateAcronymDto = req.body;\n      const isSuccess = await this.acronymService.createAcronym(acronymData.acronym, acronymData.description);\n      if (isSuccess) {\n        res.status(200).json({\n          message: 'A new acronym created.',\n          type: 'success',\n        });\n      } else {\n        res.status(200).json({\n          message: 'Try again.',\n          type: 'failed',\n        });\n      }\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public updateAcronym = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const nowAcronym: string = req.params.nowAcronym;\n      const newAcronym: string = req.body.newAcronym;\n      const newDescription: string = req.body.newDescription;\n      const isSuccess = await this.acronymService.updateAcronym(nowAcronym, newAcronym, newDescription);\n      if (isSuccess) {\n        res.status(200).json({\n          message: 'The acronym updated successfully.',\n          type: 'success',\n        });\n      } else {\n        res.status(200).json({\n          message: 'Try again.',\n          type: 'failed',\n        });\n      }\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public deleteAcronym = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const acronym: string = req.params.acronym;\n      const isSuccess = await this.acronymService.deleteAcronym(acronym);\n      if (isSuccess) {\n        res.status(200).json({\n          message: 'The acronym deleted successfully.',\n          type: 'success',\n        });\n      } else {\n        res.status(200).json({\n          message: 'Try again.',\n          type: 'failed',\n        });\n      }\n    } catch (error) {\n      next(error);\n    }\n  };\n}\n\nexport default AcronymController;\n"],"names":["AcronymController","acronymService","AcronymService","createAcronym","req","res","next","acronymData","body","isSuccess","acronym","description","status","json","message","type","error","updateAcronym","nowAcronym","params","newAcronym","newDescription","deleteAcronym","readAcronym","from","limit","search","query","acronyms","isOnly","setHeader","toString","data","GET","SwaggerTags","Path"],"mappings":"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"}